{"version":3,"sources":["components/common/FormControls/FormControls.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/FormControls/FormControls.jsx","components/Login/Login.jsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","createField","validators","name","type","component","placeholder","text","Field","validate","FormControl","Component","input","meta","props","hasError","touched","error","className","classes","formControl","errorText","Input","Login","isAuth","login","to","LoginReduxForm","onSubmit","formData","email","password","rememberMe","reduxForm","form","handleSubmit","required","connect","state","auth"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,kC,iCCAnG,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,iFEDKW,EAAc,SAACC,EAAYC,EAAMC,EAAMC,EAAWC,EAAaC,GACzE,OACG,6BACI,kBAACC,EAAA,EAAD,CAAOC,SAAUP,EAAYC,KAAMA,EAAMC,KAAMA,EACxCC,UAAWA,EAAWC,YAAaA,IAAeC,IAKrDG,IArBK,SAACC,GAAD,OAAe,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,sBACtDC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,oCACI,yBAAKC,UAAWC,IAAQC,YAAc,KAAOL,EAAWI,IAAQF,MAAQ,OACpE,kBAACN,EAAD,iBAAeC,EAAWE,KAE7BC,EAAW,yBAAKG,UAAWC,IAAQE,WAAYR,EAAKI,OAAc,S,iCCX/E,kHAQMK,EAAQZ,YAAY,SAEba,EAAQ,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MAK3B,OAAID,EACO,kBAAC,IAAD,CAAUE,GAAG,aAIpB,6BACI,qCACA,kBAACC,EAAD,CAAgBC,SAXP,SAACC,GACdJ,EAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,iBA4BpDL,EAAiBM,YAAU,CAACC,KAAM,SAAjBD,EAbL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAclB,EAAW,EAAXA,MAC9B,OACI,0BAAMW,SAAUO,GACXlC,YAAY,CAACmC,KAAW,QAAS,QAASd,EAAO,QAAS,MAC1DrB,YAAY,CAACmC,KAAW,WAAY,WAAYd,EAAO,WAAY,MACnErB,YAAY,KAAM,aAAc,WAAYqB,EAAO,KAAM,eAEzDL,EAAQ,6BAAMA,GAAa,KAC5B,+CAWGoB,uBAJS,SAACC,GAAD,MAAY,CAChCd,OAAQc,EAAMC,KAAKf,UAGiB,CAACC,WAA1BY,CAAkCd","file":"static/js/5.5556c284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1wl4t\",\"error\":\"FormControls_error__hoDi7\",\"errorText\":\"FormControls_errorText__8rwDX\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport classes from './FormControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = (Component) => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <>\r\n            <div className={classes.formControl + ' ' + (hasError ? classes.error : null)}>\r\n                <Component {...input} {...props}/>\r\n            </div>\r\n            {hasError ? <div className={classes.errorText}>{meta.error}</div>: null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport  const createField = (validators, name, type, component, placeholder, text) => {\r\n    return (\r\n       <div>\r\n           <Field validate={validators} name={name} type={type}\r\n                  component={component} placeholder={placeholder}/>{text}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default FormControl;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport FormControl, {createField} from \"../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Input = FormControl('input');\r\n\r\nexport const Login = ({isAuth, login}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField([required], 'email', 'email', Input, 'Email', null)}\r\n            {createField([required], 'password', 'password', Input, 'Password', null)}\r\n            {createField(null, 'rememberMe', 'checkbox', Input, null, 'remember me')}\r\n\r\n            {error ? <div>{error}</div>:null}\r\n            <button>Sign in</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}